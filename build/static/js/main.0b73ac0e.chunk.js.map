{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.sass","components/Navigation/MenuToggle/MenuToggle.module.sass","containers/Quiz/Quiz.module.sass","components/ActiveQuiz/ActiveQuiz.module.sass","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.sass","components/FinishedQuiz/FinishedQuiz.module.sass","components/UI/Button/Button.module.sass","components/UI/Loader/Loader.module.sass","containers/Auth/Auth.module.sass","components/UI/Input/Input.module.sass","hoc/Layout/Layout.module.sass","components/UI/Backdrop/Backdrop.module.sass","components/ActiveQuiz/AnswersList/AnswersList.module.sass","containers/QuizList/QuizList.module.sass","containers/QuizCreator/QuizCreator.module.sass","components/UI/Select/Select.module.sass","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","classes","cls","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","fetchQuizSuccess","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","async","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","toched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validateForm","hasOwnProperty","Select","options","option","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","validate","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b73ac0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__1G0xI\",\"close\":\"Drawer_close__Bullf\",\"active\":\"Drawer_active__2vndQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__lkWQE\",\"open\":\"MenuToggle_open__1YOKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3-EMv\",\"QuizWrapper\":\"Quiz_QuizWrapper__2enP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3VsIr\",\"Question\":\"ActiveQuiz_Question__yJxut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1Q_VC\",\"success\":\"AnswerItem_success__3xibf\",\"error\":\"AnswerItem_error__1aECP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__24ZCu\",\"success\":\"FinishedQuiz_success__1BPO9\",\"error\":\"FinishedQuiz_error__A6810\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3rzEa\",\"error\":\"Button_error__362jH\",\"success\":\"Button_success__14Vyv\",\"primary\":\"Button_primary__3B3H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1Rbz8\",\"lds-ripple\":\"Loader_lds-ripple__31GGm\",\"center\":\"Loader_center__35Ppf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3t154\",\"AuthForm\":\"Auth_AuthForm__2SF2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3CRMU\",\"invalid\":\"Input_invalid__3WjAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__wfvuf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3Dio4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1avQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__dRpAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1M0oM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2y_LX\"};","import React from \"react\"\nimport cls from './MenuToggle.module.sass'\n\nconst MenuToggle = props => {\n  const classes = [\n    cls.MenuToggle,\n    'fa'\n  ]\n  if (props.isOpen) {\n    classes.push('fa-times')\n    classes.push(cls.open)\n  } else {\n    classes.push('fa-bars')\n  }\n\n  return (\n    <i\n      className={classes.join(' ')}\n      onClick={props.onToggle}\n    >\n\n    </i>\n  )\n}\n\nexport default MenuToggle","import React from \"react\";\nimport cls from './Backdrop.module.sass'\n\nconst Backdrop = props =>\n  <div className={cls.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, {Component} from \"react\"\r\nimport cls from './Drawer.module.sass'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// const links = [\r\n//   {to: '/', label: 'Список', exact: true},\r\n//   {to: '/auth', label: 'Авторизация', exact: false},\r\n//   {to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n// ]\r\n\r\nclass Drawer extends Component {\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={cls.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const classes = [cls.Drawer]\r\n    if (!this.props.isOpen) {\r\n      classes.push(cls.close)\r\n    }\r\n    const links = [\r\n      {to: '/', label: 'Список', exact: true},\r\n      // {to: '/auth', label: 'Авторизация', exact: false},\r\n      // {to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n    ]\r\n\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n      links.push({to: '/logout', label: 'Выйти', exact: false})\r\n    } else {\r\n      links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={classes.join(' ')}>\r\n          <ul>\r\n            {this.renderLinks(links)}\r\n          </ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Drawer","import React, {Component} from \"react\"\r\nimport cls from './Layout.module.sass'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n    render() {\r\n        return (\r\n            <div className={cls.Layout}>\r\n\r\n                <Drawer\r\n                  isOpen={this.state.menu}\r\n                  onClose={this.menuCloseHandler}\r\n                  isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle\r\n                  onToggle={this.toggleMenuHandler}\r\n                  isOpen={this.state.menu}\r\n                />\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from \"react\"\r\nimport cls from './AnswerItem.module.sass'\r\n\r\nconst AnswerItem = props => {\r\n    const classes = [cls.AnswerItem]\r\n\r\n    if (props.state) {\r\n        classes.push(cls[props.state])\r\n    }\r\n    return (\r\n        <li\r\n            className={classes.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from \"react\"\r\nimport cls from './AnswersList.module.sass'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => (\r\n    <ul className={cls.AnswersList}>\r\n      { props.answers.map((answer, index) => {\r\n        return (\r\n          <AnswerItem\r\n            key={index}\r\n            answer={answer}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state ? props.state[answer.id] : null}\r\n          />\r\n        )\r\n      }) }\r\n    </ul>\r\n)\r\n\r\n\r\n\r\n\r\n\r\nexport default AnswersList","import React from \"react\"\r\nimport cls from './ActiveQuiz.module.sass'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={cls.ActiveQuiz}>\r\n        <p className={cls.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n              {props.question}\r\n            </span>\r\n            <small>{props.answerNumber} из { props.quizLength }</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from \"react\"\nimport cls from './Button.module.sass'\n\nconst Button = props => {\n  const classes = [\n    cls.Button,\n    cls[props.type]\n  ]\n  return (\n    <button\n      onClick={props.onClick}\n      className={classes.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button","import React from \"react\"\r\nimport cls from './FinishedQuiz.module.sass'\r\nimport Button from \"../UI/Button/Button\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if(props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total\r\n  }, 0)\r\n\r\n\r\n\r\n  return (\r\n    <div className={cls.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const classes = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            cls[props.results[quizItem.id]]\r\n          ]\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={classes.join(' ')}/>\r\n            </li>\r\n          )\r\n        })}\r\n\r\n\r\n\r\n      </ul>\r\n      <p>Првильно {successCount} из {props.quiz.length} </p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n        <Link to={\"/\"}>\r\n          <Button type=\"success\">Перейти в список тестов</Button>\r\n        </Link>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz\r\n","import React from \"react\"\nimport cls from './Loader.module.sass'\n\nconst Loader = props => (\n  <div className={cls.center}>\n    <div className={cls.Loader}>\n      <div />\n      <div />\n    </div>\n  </div>\n)\n\nexport default Loader","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://react-quiz-b77e2.firebaseio.com/'\n})","export  const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport  const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport  const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport  const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n\r\n","import axios from '../../axios/axios-quiz'\r\nimport {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY,\r\n  QUIZ_SET_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('/quizes.json')\r\n\r\n      const quizes = []\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест ${index + 1}-й`\r\n        })\r\n      })\r\n\r\n      // this.setState({\r\n      //   quizes, loading: false\r\n      // })\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport  function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion]\r\n    const results = state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 700)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n\r\n}","import React, {Component} from \"react\"\r\nimport cls from './Quiz.module.sass'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\"\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from \"../../components/UI/Loader/Loader\"\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends Component {\r\n  // state = {\r\n  //   results: {}, // { [id]: success error }\r\n  //   isFinished: false,\r\n  //   activeQuestion: 0,\r\n  //   answerState: null, // { [id]: 'success' 'error' }\r\n  //   loading: true,\r\n  //   quiz: [\r\n  //     // {\r\n  //     //   question: 'Какого цвета небо?',\r\n  //     //   rightAnswerId: 2,\r\n  //     //   id: 1,\r\n  //     //   answers: [\r\n  //     //     {text: 'Чёрный', id: 1},\r\n  //     //     {text: 'Синий', id: 2},\r\n  //     //     {text: 'Красный', id: 3},\r\n  //     //     {text: 'Зеленый', id: 4}\r\n  //     //   ]\r\n  //     // },\r\n  //     // {\r\n  //     //   question: 'В каком году основали Санкт-Петербург?',\r\n  //     //   rightAnswerId: 3,\r\n  //     //   id: 2,\r\n  //     //   answers: [\r\n  //     //     {text: '1700', id: 1},\r\n  //     //     {text: '1702', id: 2},\r\n  //     //     {text: '1703', id: 3},\r\n  //     //     {text: '1803', id: 4}\r\n  //     //   ]\r\n  //     // },\r\n  //     // {\r\n  //     //   question: 'Что лишнее в этом списке?',\r\n  //     //   rightAnswerId: 3,\r\n  //     //   id: 3,\r\n  //     //   answers: [\r\n  //     //     {text: 'Квадрат', id: 1},\r\n  //     //     {text: 'Круг', id: 2},\r\n  //     //     {text: 'Кубик', id: 3},\r\n  //     //     {text: 'Треугольник', id: 4}\r\n  //     //   ]\r\n  //     // }\r\n  //   ]\r\n  // }\r\n\r\n  // onAnswerClickHandler = answerId => {\r\n  //   // if (this.state.answerState) {\r\n  //   //   const key = Object.keys(this.state.answerState)[0]\r\n  //   //   if (this.state.answerState[key] === 'success') {\r\n  //   //     return\r\n  //   //   }\r\n  //   // }\r\n  //   //\r\n  //   // const quiestion = this.state.quiz[this.state.activeQuestion]\r\n  //   // const results = this.state.results\r\n  //   //\r\n  //   // if (quiestion.rightAnswerId === answerId) {\r\n  //   //   if (!results[quiestion.id]) {\r\n  //   //     results[quiestion.id] = 'success'\r\n  //   //   }\r\n  //   //   this.setState({\r\n  //   //     answerState: {[answerId]: 'success'},\r\n  //   //     results\r\n  //   //   })\r\n  //   //   const timeout = window.setTimeout(() => {\r\n  //   //     if (this.isQuizFinished()) {\r\n  //   //       this.setState({\r\n  //   //         isFinished: true\r\n  //   //       })\r\n  //   //     } else {\r\n  //   //       this.setState({\r\n  //   //         activeQuestion: this.state.activeQuestion + 1,\r\n  //   //         answerState: null\r\n  //   //       })\r\n  //   //     }\r\n  //   //     window.clearTimeout(timeout)\r\n  //   //   }, 700)\r\n  //   // } else {\r\n  //   //   results[quiestion.id] = 'error'\r\n  //   //   this.setState({\r\n  //   //     answerState: {[answerId]: 'error'},\r\n  //   //     results\r\n  //   //   })\r\n  //   // }\r\n  // }\r\n\r\n  // isQuizFinished() {\r\n  //   return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  // }\r\n\r\n  // retryHandler = () => {\r\n  //   this.setState({\r\n  //     results: {},\r\n  //     isFinished: false,\r\n  //     activeQuestion: 0,\r\n  //     answerState: null\r\n  //   })\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n    // try {\r\n    //   const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\r\n    //   const quiz = response.data\r\n    //\r\n    //   this.setState({\r\n    //     quiz,\r\n    //     loading: false\r\n    //   })\r\n    // } catch (e) {\r\n    //   console.log(e)\r\n    // }\r\n\r\n  }\r\n\r\n componentWillUnmount() {\r\n    this.props.retryQuiz()\r\n }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={cls.Quiz}>\r\n          <div className={cls.QuizWrapper}>\r\n            <h1>Ответьте на все вопросы</h1>\r\n\r\n            {\r\n              this.props.loading || !this.props.quiz\r\n              ? <Loader/>\r\n              :  this.props.isFinished\r\n                ? <FinishedQuiz\r\n                  results={this.props.results}\r\n                  quiz={this.props.quiz}\r\n                  onRetry={this.props.retryQuiz}\r\n                />\r\n                : <ActiveQuiz\r\n                  answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                  question={this.props.quiz[this.props.activeQuestion].question}\r\n                  onAnswerClick={this.props.quizAnswerClick}\r\n                  quizLength={this.props.quiz.length}\r\n                  answerNumber={this.props.activeQuestion + 1}\r\n                  state={this.props.answerState}\r\n                />\r\n            }\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    results: state.quiz.results,\r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from \"react\"\r\nimport cls from './QuizList.module.sass'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\n// import axios from '../../axios/axios-quiz'\r\nimport {connect} from \"react-redux\"\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n  // state = {\r\n  //   quizes: [],\r\n  //   loading: true\r\n  // }\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n componentDidMount() {\r\n    this.props.fetchQuizes()\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className={cls.QuizList}>\r\n          <div>\r\n            <h1>Список тестов</h1>\r\n\r\n            {\r\n              this.props.loading && this.props.quizes.length !== 0\r\n                ? <Loader/>\r\n                : <ul>\r\n                  {this.renderQuizes()}\r\n                </ul>\r\n            }\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from \"react\"\r\nimport cls from './Input.module.sass'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n  const inputType = props.type || 'text'\r\n  const classes = [cls.Input]\r\n  const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n  if (isInvalid(props)) {\r\n    classes.push(cls.invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n        isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n          : null\r\n      }\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email, password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBsiK0nKhwP9mE11raGMrMpKZyRfXXd3ak'\r\n\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBsiK0nKhwP9mE11raGMrMpKZyRfXXd3ak'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n\r\n\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n  return {\r\n    type:AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, {Component} from \"react\"\r\nimport cls from './Auth.module.sass'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\n// import axios from 'axios'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\n// function validateEmail(email) {\r\n//   const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n//   return re.test(String(email).toLowerCase());\r\n// }\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        toched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        toched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n    // const authData = {\r\n    //   email: this.state.formControls.email.value,\r\n    //   password: this.state.formControls.password.value,\r\n    //   returnSecureToken: true\r\n    // }\r\n    // try {\r\n    //   const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBsiK0nKhwP9mE11raGMrMpKZyRfXXd3ak', authData)\r\n    //   console.log(response.data)\r\n    // } catch (e) {\r\n    //   console.log(e)\r\n    // }\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n    // const authData = {\r\n    //   email: this.state.formControls.email.value,\r\n    //   password: this.state.formControls.password.value,\r\n    //   returnSecureToken: true\r\n    // }\r\n    // try {\r\n    //   const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBsiK0nKhwP9mE11raGMrMpKZyRfXXd3ak', authData)\r\n    //   console.log(response.data)\r\n    // } catch (e) {\r\n    //   console.log(e)\r\n    // }\r\n    \r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    // if (validation.email) {\r\n    //   isValid = validateEmail(value) && isValid\r\n    // }\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs () {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n\r\n        />\r\n      )\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={cls.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={cls.AuthForm}>\r\n            { this.renderInputs() }\r\n\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Войти\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    toched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let  isValid = true\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n  }\r\n\r\n  return isFormValid\r\n}","import React from \"react\"\nimport cls from './Select.module.sass'\n\nconst Select = props => {\n  const htmlFor = `${props.label}-${Math.random()}`\n\n  return (\n    <div className={cls.Select}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <select\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        { props.options.map((option, index) => {\n          return (\n            <option\n              value={option.value}\n              key={option.value + index}\n            >\n              { option.text }\n            </option>\n          )\n        }) }\n      </select>\n    </div>\n  )\n}\n\nexport default Select","const Auxiliary = props => props.children\n\nexport default Auxiliary","import React, {Component} from \"react\"\r\nimport cls from './QuizCreator.module.sass'\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport {createControl, validate, validateForm} from \"../../form/formFramework\"\r\nimport Select from \"../../components/UI/Select/Select\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\"\r\n// import axios from '../../axios/axios-quiz'\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Заполните пустое поле',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Поле не может быть пустым'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    // quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    // const quiz = this.state.quiz.concat()\r\n    // const index = quiz.length + 1\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n\r\n    this.setState({\r\n      // quiz,\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault()\r\n\r\n\r\n    // axios.post('/quizes.json', this.state.quiz)\r\n\r\n    this.setState({\r\n      // quiz: [],\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n\r\n\r\n\r\n    // axios.post('https://react-quiz-b77e2.firebaseio.com/quizes.json', this.state.quiz)\r\n    //   .then(response => {\r\n    //     console.log(response)\r\n    //   })\r\n    //   .catch(error => console.log(error))\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = {...this.state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          {index === 0 ? <hr/> : null}\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const select = <Select\r\n      label=\"Выбирите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4},\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={cls.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('/quizes.json',getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {logout} from \"../../store/actions/auth\"\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'} />\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react'\r\nimport Layout from \"./hoc/Layout/Layout\"\r\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\r\nimport Quiz from \"./containers/Quiz/Quiz\"\r\nimport QuizList from \"./containers/QuizList/QuizList\"\r\nimport Auth from \"./containers/Auth/Auth\"\r\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\"\r\nimport {connect} from \"react-redux\"\r\nimport Logout from \"./components/Logout/Logout\"\r\nimport {autoLogin} from \"./store/actions/auth\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.autoLogin()\r\n  }\r\n\r\n  render() {\r\n\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/quiz/:id\" component={Quiz} />\r\n        <Route path=\"/\" exact component={QuizList} />\r\n        <Redirect to={\"/\"} />\r\n      </Switch>\r\n    )\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\r\n          <Route path=\"/quiz/:id\" component={Quiz} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={QuizList} />\r\n          <Redirect to={\"/\"} />\r\n        </Switch>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n          { routes }\r\n        </Layout>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    autoLogin: () => dispatch(autoLogin())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION, QUIZ_RETRY,\r\n  QUIZ_SET_STATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {}, // { [id]: success error }\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null, // { [id]: 'success' 'error' }\r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.number\r\n      }\r\n    case QUIZ_RETRY:\r\n      return  {\r\n        ...state,\r\n        results: {},\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state, quiz: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return  {\r\n        ...state, token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from \"./quiz\"\r\nimport createReducer from \"./create\"\r\nimport authReducer from \"./auth\"\r\n\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from \"./store/reducers/rootReducer\"\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n  )\r\n\r\nconst  app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}